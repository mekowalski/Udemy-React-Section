GRID CSS SYSTEM
(CSS will only take design so far)
-Find element in the DOM hierarchy
-Every photo (or element) under that Top-level element will be layed out in a Grid format

eg:
  <div style = 'display: grid'>         -----  -----  -----
      <img 1>                           | 1 |  | 2 |  | 3 |
      <img 2>                           -----  -----  -----
      <img 3>                           -----  -----  -----
      <img 4>                           | 4 |  | 5 |  | 6 |
      <img 5>                           -----  -----  -----
      <img 6>


-In the DevTools Element tabs, there will be a display of dotted lines that will represent each grid
-Adjusting:
1. Each photo is shoved up against each other, provide spacing with grid-gap: #px
2. Create set number of columns with grid-template-columns: repeat(auto-fill, minmax(#px, #fr))
  -auto-fill: will determine how many columns to insert
  -minmax(#px, #fr): each column will have a minimum of whatever px and an fr of allocated space
  -fr: for every column created, they should all be the same equal size


ISSUES WITH GRID CSS
-Grid CSS will return space gaps between columns and rows due to its default set up
-grid-auto-rows: 200px: This will scrunch up the rows into a smaller pixel size, or whatever size is given
-It won't work with photos that are larger in width size that is determined in the pixel value therefore
 photos will overlap

-grid-row-end: span #: provides more space but this is a rule that is only applied to all the photos at the
 same time
-Each of the photos will require a different span value
-For every individual photo, determine the height. Based on the height decide on how many spans should be
 allocated
-This cannot be CSS alone, because the styling is based upon the content of the photo
-Therefore JS will need to be written and React will come into play(YAY!)
